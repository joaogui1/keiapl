<html>
<head>
<title>Passage: K.E. Iverson</title>
<link href="jdoc.css" rel=stylesheet>
</head>

<body>

<p><font size=+3>Passage: K.E. Iverson</font></p>
<table>
<tr><td>2004-10-21</td><td>&nbsp;</td>
 <td><a href="#jforum">J Forum</a></td></tr>
<tr><td>2004-10-21</td><td>&nbsp;</td>
 <td><a href="#klist">K List</a></td></tr>
<tr><td>2004-10-22</td><td>&nbsp;</td>
 <td><a href="#globeandmail0">Globe &amp; Mail Births &amp; Deaths</a></td></tr>
<tr><td>2004-10-25</td><td>&nbsp;</td>
 <td><a href="#globeandmail1">Globe &amp; Mail Obituary</a></td></tr>
<tr><td>2004-10-28</td><td>&nbsp;</td>
 <td><a href="#edmontonjournal">Edmonton Journal</a></td></tr>
<tr><td>2004-11-04</td><td>&nbsp;</td>
 <td><a href="#businessedge">Business Edge</a></td></tr>
<tr><td>2004-11-05</td><td>&nbsp;</td>
 <td><a href="#timesuk">Times of London</a></td></tr>
<tr><td>2004-11-06</td><td>&nbsp;</td>
 <td><a href="#lemonde">Le Monde</a></td></tr>
<tr><td>2004-11-09</td><td>&nbsp;</td>
 <td><a href="#acm">ACM</a></td></tr>
<tr><td>2004-11-16</td><td>&nbsp;</td>
 <td><a href="#itbiz">ITBusiness.ca</a></td></tr>
<tr><td>2004-11-18</td><td>&nbsp;</td>
 <td><a href="#torapl">Toronto APLSIG</a></td></tr>
<tr><td>2004-11-20</td><td>&nbsp;</td>
 <td><a href="#washpost">Washington Post</a></td></tr>
<tr><td>2004-11-30</td><td>&nbsp;</td>
 <td><a href="#museum">Computer Museum</a></td></tr>
<tr><td>2004-12</td><td>&nbsp;</td>
 <td><a href="#ieeeannals">IEEE Annals of the History of Computing</a></td></tr>
<tr><td>2005-02</td><td>&nbsp;</td>
 <td><a href="#discover">Discover</a></td></tr>
<tr><td>2005-06</td><td>&nbsp;</td>
 <td><a href="#albertaviews">Alberta Views</a></td></tr>
<tr><td>2005-07</td><td>&nbsp;</td>
 <td><a href="#harvard">Harvard Magazine</a></td></tr>
</table>

<br><br><hr><br>




<a name="jforum"></a>
<p><font size=+4><b><tt>J Forum</tt></b></font><br>
</p>

<table>
<tr><td><font size=-1>Date:</font></td><td>&nbsp;</td>    <td><font size=-1>Thu, 21 Oct 2004 09:44:37 -0400</font></td></tr>
<tr><td><font size=-1>To:</font></td><td>&nbsp;</td>      <td><font size=-1>J Forum</font></td></tr>
<tr><td><font size=-1>From:</font></td><td>&nbsp;</td>    <td><font size=-1>Eric Iverson</font></td></tr>
<tr><td><font size=-1>Subject:</font></td><td>&nbsp;</td> <td><font size=-1>Dr. Kenneth E. Iverson</font></td></tr>
</table>

<p>Ken Iverson passed away Tuesday evening, October 19th at the age of 83. Ken was
at his computer Saturday afternoon working on a new J lab when he had a stroke.
Three days later he died quietly with his wife Jean by his side, along with
other  family members. Ken had a wonderful and memorable life. He enjoyed it
fully and he freely shared his joy with so many others.</p>

<p>Many people have contributed to the start, growth, and evolution of J. But Ken&rsquo;s
role was central and inspirational. J exists because of Ken and we will always
remember that.</p>

<p>The J Forum was a particular joy for Ken. He was an avid reader and was amazed
and pleased with the civility.</p>

<p>In his last days Ken expressed confidence that the J seeds he had planted had
taken root and was satisfied that the steady and healthy growth would continue.
Ken has passed a torch and it is now up to us.</p>

<p>Ken&rsquo;s immediate family is having a private memorial service. In lieu of flowers,
please make a memorial donation to the charity of your choosing or to 
<a href="http://www.allto.ca">the Academy of Life Long Learning (www.allto.ca)</a>. 
Ken&rsquo;s life was based on the
importance of education and teaching and in recent years, with Jean&rsquo;s serious
involvement, the Academy was an important part of Ken&rsquo;s wider life outside of J.</p>

<p>/Eric Iverson

<p><font size=-1>
--------------------------------------------------------------------------<br>
For information about the J Forum see 
<a href="http://www.jsoftware.com/j_forum.htm">http://www.jsoftware.com/j_forum.htm</font></a>
</p>

<br><hr><br>




<a name="klist"></a>
<p><font size=+4><b><tt>K List</tt></b></font><br>
</p>

<table>
<tr><td><font size=-1>From:</font></td><td>&nbsp;</td>        <td><font size=-1>arthur whitney</font></td></tr>
<tr><td><font size=-1>To:</font></td><td>&nbsp;</td>    <td><font size=-1>k4@listbox.com</font></td></tr>
<tr><td><font size=-1>Cc:</font></td><td>&nbsp;</td>        <td><font size=-1>info@kx.com</font></td></tr>
<tr><td><font size=-1>Sent:</font></td><td>&nbsp;</td><td><font size=-1>Thursday, October 21, 2004 8:17 AM</font></td></tr>
<tr><td><font size=-1>Subject:</font></td><td>&nbsp;</td><td><font size=-1>[k4] dr. kenneth e iverson</font></td></tr>
</table>

<p>ken iverson passed away tuesday evening at the age of 83.
he invented apl and made a+, j and k possible.</p>
 
<p>ken grew up on a farm in northeastern alberta. like
many farm kids he had to drop out of school to work.
he was in the royal canadian air force during the war.
after the war he went to queen&rsquo;s(?) and then harvard where
he studied applied mathematics under aiken. there
he began to design a rationalized notation for mathematics
that became apl. in 1979 he won the turing award:
&ldquo;notation as a tool of thought&rdquo;</p>

<p>here is a typical note from the jforum (kip murray):</p>

<blockquote>I have followed Ken&rsquo;s career with delight from the time in the 60&rsquo;s
when, in Austin, Texas, we heard Ken had used APL to put the operating
system of the IBM 360 on a single piece of paper.</blockquote>

<p>he was a great man and we will miss him.</p>

<br><br><hr><br>




<a name="globeandmail0"></a>
<table><tr>
<td valign=top><img src="tgam.gif"><br>
<b>&nbsp; &nbsp; Births &amp; Deaths</b></td>
<td>&nbsp; &nbsp; &nbsp;</td>
<td><font size=+3>KENNETH E. IVERSON</font><br>
<font size=+1>Noted Computer Scientist</font>
</td></tr></table>

<p>Kenneth E. Iverson, a pioneer in the field of computer science, 
died on Tuesday, October 19th in Toronto, Canada. He was 83.</p>

<p>He is survived by his wife of 58 years, Jean (n&eacute;e Nicholson); 
three sons, Eric (Suzann), Paul and Keith (Marcella); 
daughter Janet Cramer (Kevin); foster-daughters Robin Dick and Sherry Matusky; 
and five grandchildren. </p>

<p>Born on a small farm in Camrose, Alberta in 1920, he served in the 
Canadian military during World War II. Dr. Iverson earned a B.A. 
in Mathematics and Physics from Queen&rsquo;s University and M.A. in 
Mathematics and Ph.D. in Applied Mathematics from Harvard University. </p>

<p>While on the faculty of Harvard, Dr. Iverson helped establish the first 
graduate course in computer science and also developed a concise mathematical 
notation that formed the foundation for APL (A programming Language) 
He then joined IBM in 1960. 
While at IBM, Dr. Iverson made an historic contribution to 
computer science by developing APL into an interactive programming language 
that was used widely in academic and commercial applications. </p>

<p>An original thinker and noted scholar, he was named an IBM Fellow in 1971. 
For his efforts in mathematics and computer science, Dr. Iverson received 
in 1979 the A.M. Turing Award given by the Association for Computing Machinery, 
the most prestigious award in computer science. 
He was awarded the Harry M. Goode Memorial Award in 1975 in recognition 
for his conception and development of APL and named by the IEEE Computer Society 
in 1981 as a Computer Pioneer Charter Recipient for his efforts in the creation 
and continued vitality of the computer industry. 
In 1998, he received from York University an honorary degree of Doctor of Science. </p>

<p>During his career Dr. Iverson worked in various IBM research facilities 
in the northeastern United States before moving to Toronto, Canada in 1980 
to join I.P. Sharp Associates, a timesharing computer system provider. 
In recent years Dr. Iverson was involved in the development and implementation 
of the &ldquo;J&rdquo; programming language with <a href="http://www.jsoftware.com">Jsoftware Inc.</a> </p>

<p>Dr. Iverson&rsquo;s love of language and teaching were significant factors 
in his lifetime work of trying to impose a grammar and discipline on 
the language of mathematics. </p>

<p>A private service will be held for the immediate family. 
Memorial donations may be made to a charity of your choice or 
to the bursary fund of 
<a href="http:/www.allto.ca">the Academy for Lifelong Learning (www.allto.ca)</a>, 
59 St. George St., Toronto ON, M5S 2E6.</p>

<p><font size=-1>Friday, 2004-10-22</font></p>

<p><a href="http://www.theglobeandmail.com/servlet/ArticleNews/BDAStory/Deaths/20041022/92936888/birthsanddeaths">
http://www.theglobeandmail.com/servlet/ArticleNews/BDAStory/Deaths/20041022/92936888/birthsanddeaths</a>
</p>

<br><hr><br>




<a name="globeandmail1"></a>
<table><tr>
<td valign=top><img src="tgam.gif"><br>
<b>&nbsp; &nbsp; Obituaries</b></td>
<td>&nbsp; &nbsp; &nbsp;</td>
<td><font size=+3>Kenneth Iverson, Mathematician 1920-2004</font>
</td></tr></table>

<p>By JACK KAPICA<br>
Globe and Mail Update<br>
Monday, October 25, 2004</p>

<p>Kenneth Iverson was a mathematician whose intense fascination
with words and syntax led him to create an early programming
language that inspired a generation of computer programmers.</p>

<p>Born in Alberta in 1920 and educated in a one-room schoolhouse,
Mr. Iverson harboured little intention of going to college,
instead absorbing himself in textbooks his older brothers
brought home, eventually teaching himself calculus.  But the
Second World War intervened; he became a flight engineer
specializing in reconnaissance. When the war ended, a fellow
serviceman who had taken note of his love of learning, told him,
&ldquo;If you don&rsquo;t go to university I&rsquo;m going to go down and beat
your brains out,&rdquo; his widow, Jean, recalls.</p>

<p>So when he was demobilized, Mr. Iverson enrolled at Queen&rsquo;s
university, earning a Bachelor of Arts degree in mathematics.
He continued his education at Harvard University, where he
graduated with a Master of Arts and, in 1954, a doctorate
in applied mathematics.</p>

<p>He stayed at Harvard to teach mathematics and there developed
a system of notation to describe to students a method of
handling large groups of numbers.  He published a book on it
in 1962, titled A Programming Language, a name that was
subsequently contracted to APL.</p>

<p>International Business Machines Ltd. took note of what he
had done, and in 1962 lured him from Harvard to develop
APL as a language for use in its new IBM System 360
mainframe computers. He took three colleagues along with
him to IBM &mdash; Larry Breed, Roger Moore and Dick Lathwell
&mdash; who were later awarded the Grace Hopper Award for the
subsequent implementation of APL based on the principles
laid down by Mr. Iverson.</p>

<p>As the computing revolution picked up speed, APL was not
relegated to a dark corner of history, but embraced by
a growing number of programmers who were in awe of its
&ldquo;elegance&rdquo;, a word the community uses to describe an
especially simple but powerful language. APL&rsquo;s popularity
lay in its ability to manipulate large amounts of data,
therefore making it ideal for programming databases.</p>

<p>Although it is compact, simple and easy to learn, APL&rsquo;s use
of symbols can initially intimidate novice programmers.
&ldquo;You could write a program using APL 10 times faster than
with any other languages,&rdquo; recalls Lib Gibson, an executive
with Bell Canada who worked with Mr. Iverson in his later
years at I.P. Sharp Associates Ltd., a Toronto-based
time-sharing company.</p>

<p>Initially, it was bundled with what are considered to be
the world&rsquo;s first microcomputers, made in Toronto by
MCM Computers Ltd., in 1974 &mdash; at least two years before
Apple introduced its desktop machine.</p>

<p>APL maintained its devotees well into the 1980s, when it
become a &ldquo;niche language&rdquo;, said his son Eric. During his
later years Mr. Iverson developed an advanced version
called J &mdash; more formally, the J Notation for the APL
language &mdash; that could run on a variety of computers.</p>

<p>But he will remain known for APL. For more than 35 years
he managed to turn it into a successful commercial property
and, in the process, won the Harry Goode Award in 1975,
the A.M. Turing Award in 1979, the IEEE Computer Pioneer
Award in 1982 and the National Medal of Technology in 1991.</p>

<p>His ability to create such languages came from his
&ldquo;sheer enjoyment of language and words&rdquo;, recalls his daughter
Janet Cramer. &ldquo;He read dictionaries like people read novels.&rdquo;</p>

<p>Mr. Iverson thought it was important that language, both English
and mathematics, could communicate clearly and concisely,
she said, and he was always finding relationships between things.
&ldquo;If there was anyone who would have come up with the Universal
Theory of Everything, it would have been him.&rdquo;</p>

<p>Mr. Iverson was no pedant, however. A gregarious man, he attracted
many young people around him. &ldquo;He was a natural teacher,&rdquo; said
his widow Jean. &ldquo;He couldn&rsquo;t change a light bulb without showing
the kids how it was done.&rdquo;
In fact, he and his wife looked after many children, particularly
during the years Jean worked in a youth advocacy program.
The Iversons had four children of their own &mdash; sons Eric, Paul
and Keith and one daughter, Janet &mdash; but still found room for
some of Jean&rsquo;s troubled children. Two of them &mdash; Robin Dick and
Sherry Natusky &mdash; ended up staying at the Iverson home, and are
now part of the Iverson family.</p>

<p>Mr. Iverson became a Fellow at IBM, a signal honour given only
to its most prized employees. When he retired in 1980, he moved
back to Toronto, where he worked at I.P. Sharp until 1987.</p>

<p>For the rest of his life he dedicated himself the exploration of
computer languages. &ldquo;He didn&rsquo;t stop thinking or working in 1987,&rdquo; his son Eric said,
&ldquo;but continued his aggressive research until he died.&rdquo; 
And that&rsquo;s how he died. He was sitting at his computer at home,
working on the J language, when he was felled by a stroke.</p>

<p>Kenneth Iverson, mathematician, was born on Dec. 17, 1920,
in Camrose, Alta. He died on Oct. 19, 2004. He was 83.</p>

<p><a href="http://www.globetechnology.com/servlet/story/RTGAM.20041025.wxobiverson25/BNStory/Technology/">
http://www.globetechnology.com/servlet/story/RTGAM.20041025.wxobiverson25/BNStory/Technology/</a>
</p>

<br><hr><br>




<a name="edmontonjournal"></a>
<table><tr>
<td valign=top><img src="edmontonjournal.jpg"><br>
<font size=+1>Life &amp; Times</font></td>
<td>&nbsp; &nbsp; &nbsp;</td>
<td><font size=+3>Dr. Kenneth E. Iverson&rsquo;s</font><br>
<font size=+1>APL computer code was child&rsquo;s play &mdash;
and scientists loved it too</font></td></tr></table>

<p>Don Retson</p>

<p>The only Canadian to win the equivalent of a Nobel Prize for 
computer science was a visionary, a proud Albertan and a great debater.</p>

<p>Dr. Kenneth E. Iverson, a pioneer in the field of computer science, 
died Oct. 19 in Toronto. He was 83.</p>

<p>&ldquo;Ken was a visionary ... certainly way ahead of everyone,&rdquo; 
said Bill Adams, a retired professor in the University of Alberta&rsquo;s 
department of computing science.</p>

<p>A native of Camrose, Dr. Iverson was &ldquo;always very proud&rdquo; 
to mention he was an Albertan, said Adams.</p>

<p>He was also a tough debater. Any time someone thought they&rsquo;d 
argued Dr. Iverson into a corner, Adams said, 
he would quickly come back with another argument, 
phrased in simple language that anyone could appreciate.</p>

<p>&ldquo;He was a very feisty guy,&rdquo; Adams chuckled. 
&ldquo;If his pistol misfired, he knocked you down with the butt end of it.&rdquo;</p>

<p>Dr. Iverson&rsquo;s greatest claim to fame was developing a programming language 
that was so simple that even a child could use it. 
At the same time, scientists preferred APL (A Programming Language) 
to traditional programming languages because APL used concise mathematical notation.</p>

<p>Dr. Iverson began developing APL while at Harvard University, 
where he set up the first graduate course in computer science. 
From 1960 to 1980, Dr. Iverson continued to make contributions 
to computer science at IBM.</p>

<p>&ldquo;He was brilliant, way ahead of his time,&rdquo; said Jonathan Schaeffer, 
a professor at the U of A&rsquo;s department of computing science, 
who noted that Dr. Iverson in 1979 received the A.M. Turing Award, 
the most prestigious award in computer science.
Although bestowed with other awards and honours, 
Schaeffer observed that Dr. Iverson&rsquo;s ground-breaking 
scientific accomplishments are relatively unknown in his home province.</p>

<p>&ldquo;He is a famous Albertan, 
but nobody seems to know about him. And that&rsquo;s a real shame,&rdquo; said Schaeffer.</p>

<p>Dr. Iverson is survived by his wife Jean, sons Eric, Paul and Keith, 
daughter Janet Cramer, foster daughters Robin Dick and Sherry Matusky 
and five grandchildren.</p>

<p><font size=-1>October 28, 2004</font></p>
<br><hr><br>




<a name="businessedge"></a>
<table><tr>
<td valign=top><img src="belogo.gif"></td>
<td>&nbsp; &nbsp;</td>
<td><font size=+3>IT seeks to recapture lustre in career market</font><br>
<font size=+1>Computing science groups make effort to reach youngsters</font>
</td></tr></table>

<p>Computer programmers used to play goofy games, like trying to write 
the one-line program that would do the most powerful things.</p>

<p>If they were using different languages, the person armed with a 
language called APL would almost certainly be the winner. 
While FORTRAN and COBOL hackers scribbled frantically,
 the APLer just made a few elegant keystrokes and sat back.</p>

<p>Yet, if you asked that APL programmer to explain the program a few weeks later, 
you might receive a blank stare. People joked that &ldquo;APL was a write-only language&rdquo; 
because even the author often had trouble understanding a program written in it. </p>

<p>Such were the vagaries of what may have been the most powerful 
computer language ever hatched by a Canadian. 
Yes, I know that James Gosling, an alumnus of the University of Calgary, 
was the &ldquo;father of Java.&rdquo; He and I have talked about it. 
And yes, there is a now a game called &ldquo;Perl Golf&rdquo; in which you try 
to do the most work in that scripting language with the fewest number 
of (key-) strokes. Java and Perl are good and useful and popular, 
but APL was ... beautiful.</p>

<p>APL was the brainchild of computer scientist Kenneth E. Iverson, 
Alberta-born and Harvard-educated. He rocked the IT world in 1962 
with his entirely new idea for a programming language.</p>

<p>It used a special keyboard with Greek letters. It did amazing things. 
It was indistinguishable from magic. Modestly, he called it APL, 
for A Programming Language.</p>

<p>Geeks all over the world felt their age when Ken Iverson died recently on Oct. 19. 
He did the computer scientist version of dying in the saddle &mdash; 
suffering a stroke while sitting at his keyboard. 
He was working on a successor to APL called the J Language &mdash; 
even more powerful than APL, and no need for Greek letters. 
(You can download it for free.)</p>

<p>His son Eric told the world via the Internet that &ldquo;in his last days, 
Ken expressed confidence that the J seeds he had planted had taken root 
and was satisfied that the steady and healthy growth would continue.&rdquo;</p>

<p>Which brings us to a burning question: 
Where are the next generation of Iversons and Goslings going 
to come from? Enrolments in computer science programs are dropping alarmingly, 
and the dot-com bust didn&rsquo;t help things one bit.</p>

<p>Educational institutions are working hard to convince kids that 
computers are indeed great fun. The University of Calgary, 
for example, has after-school and summer programs for 
&ldquo;technologically advanced youth&rdquo; in areas such as software development 
and even cybersecurity. On a national basis, 
the Software Human Resources Council of Canada (SHRC) 
has just unveiled a new website to inform youth about IT careers.</p>

<p>I must disclose that I sit on the board of the SHRC 
and helped it plan out its revamped IT careers site, 
which is called, logically enough, 
<a href="http://www.DiscoverIT.org">DiscoverIT.org</a>.
It has entertaining features for kids such as an IT Time Machine 
and a Make Your Own Music Video application.</p>

<p>On a more serious note, young people and their parents 
can get credible information about the IT careers of today and tomorrow, 
including what they pay and how you get into them. 
Of course, the salary ranges are just indications 
(I&rsquo;ll bet plenty of systems analysts make less than $53,000 or more than $81,250)
 but they&rsquo;re certainly helpful.</p>

<p>Recently, I made a donkey of myself doing some high-volume 
video rants worthy of Junkyard Wars, extolling the virtues of 
IT careers to kids. One was for the Science Alberta Foundation 
and it will probably show up on their website to embarrass me.</p>

<p>I do this because there is a real danger that young people will decide 
that an IT career is boring, irrelevant or that &ldquo;its time has come and gone.&rdquo;</p>

<p>That may actually be true for the &ldquo;pure play&rdquo; computer geek. 
We probably don&rsquo;t need lots of people inventing wacky new computer languages. 
But we need some.</p>

<p>And you never know, there may be a young Iverson or Gosling lurking out there.</p>

<p>What we definitely need are people who are totally comfortable with computers, 
and who know how to integrate them intelligently into business and everyday life.</p>

<p>There&rsquo;s a move afoot by CIPS, the Canadian Information Processing Society, 
to push professionalism and credentials in IT. 
&ldquo;The business environment is changing,&rdquo; says CIPS national president Rick Penton. 
&ldquo;CIOs and their IT organizations are taking on formal accountability and 
responsibility to meet the emerging business demands in areas such as security, 
privacy, disaster recovery, business continuity and risk management.&rdquo;</p>

<p>The implication is that you are trusting some pretty important corporate 
family jewels to the IT crew, so you&rsquo;d better choose them well. 
Penton points to a Software Human Resources Council study that 
found a lot of blunders in hiring IT professionals: 
&ldquo;Seventy-five per cent of employers found themselves hiring staff 
who lacked the expected required skills for their positions.&rdquo; 
The SHRC estimates that hiring errors cost the firms &ldquo;an average of $37,000 annually.&rdquo;</p>

<p>Yes, I have the CIPS-issued Information Systems Professional (ISP) 
credential after my name because, heck, I&rsquo;ve earned it and might as well flaunt it. 
It helps reassure people that I am not some guy in a garage 
who once read a book about computers.</p>

<p>The ISP basically says that you have a computer science 
degree or the equivalent, along with work experience. 
It also, and this is more and more important in today&rsquo;s world, 
confirms that you subscribe to a code of ethics.</p>

<p>There was once a movement to license computer programmers 
such as doctors or engineers. I figured that was wrong-headed, 
because, hey, maybe 14-year-old James Gosling wouldn&rsquo;t have gotten 
a licence to program. On the other hand, if you&rsquo;re creating the
 software that engineers use to build bridges, you do need to be held accountable. 
To me, the ISP addresses these issues quite intelligently.</p>

<p>So, type a few lines of code in memory of Alberta farmboy Ken Iverson 
and keep your eyes peeled for the next smart kid who might have a goofy-but-great 
idea that will change the world of information technology.</p>

<p>
Web watch:<br>
<a href="http://www.jsoftware.com">www.jsoftware.com</a><br>
<a href="http://www.4dsolutions.net/ocn/Jlang.html">www.4dsolutions.net/ocn/Jlang.html</a> 
</p>

<p><i>Tom Keenan, ISP, is a professor at the University of Calgary 
and an expert on technology and its social implications.</i> 
</p>

<p><font size=-1>November 4 - 10, 2004 - Vol. 4, No. 39</font>

<p><a href="http://www.businessedge.ca/ViewNewsItem.aspx?EditionID=1&NewsItemID=7407&IssueID=383">
http://www.businessedge.ca/ViewNewsItem.aspx?EditionID=1&NewsItemID=7407&IssueID=383</a>
</p>
<br><hr><br>




<a name="timesuk"></a>
<table><tr>
<td valign=top><img src="TIMESHeadBGLogo_1.gif"></td>
<td>&nbsp; &nbsp;</td>
<td><font size=+3>Kenneth Iverson</font><br>
<font size=+1>Charismatic mathematician who invented the 
APL computer programming language</font>
</td></tr></table>

<p>A GIFTED mathematician and a charismatic teacher, 
Ken Iverson made a highly influential contribution to the field of computer science. 
In the early 1960s a mathematical notation which he had developed 
as an aide to teaching algebra formed the basis of APL, 
one of the languages used in programming IBM&rsquo;s early mainframe computer, 
the System/360. 
This concise and powerful language contributed substantially to 
IBM&rsquo;s domination of the emerging computer industry during the 1960s and 1970s.</p>

<p>Kenneth Eugene Iverson was born in Camrose, Alberta, Canada, in 1920. 
He demonstrated an early aptitude for mathematics &mdash; 
he taught himself calculus in his teens. 
During the Second World War he served in the Royal Canadian Air Force 
as a flight engineer specialising in reconnaissance. 
After the war he obtained a degree in mathematics and 
physics from Queen&rsquo;s University, Ontario, and 
went on to postgraduate study at Harvard where, in 1954, 
he obtained a doctorate in applied mathematics, 
and from 1955 to 1960 he was assistant professor of applied mathematics. </p>
 
<p>During this period he developed a novel way 
of teaching algebra to students, the &ldquo;Iverson notation&rdquo;. 
It attracted the interest of IBM, which was already well established 
in commercial and scientific computing fields and was developing a new mainframe, 
the System/360. </p>

<p>IBM recruited Iverson and three colleagues to turn his teaching notation 
into a programming language which could be used on the System/360. 
The result, expounded in his book A Programming Language (1962), 
came to be known as APL. </p>

<p>APL is one of the most concise, consistent and 
powerful programming languages yet developed. 
It encourages prototyping and experimentation 
in a way that was revolutionary at the time of its launch, 
and is a concrete expression of Iverson&rsquo;s oft-stated view 
that a programming language is &ldquo;a tool for thought&rdquo;. </p>

<p>Despite its use of unusual characters, which necessitated 
a special keyboard, APL quickly became a popular language and 
was used widely in the 1960s and 1970s. 
Iverson continued to work on its development and implementation for many years, 
and was appointed an IBM Fellow in 1980 in recognition of the importance 
of his achievement. After leaving the company in 1980 he returned to Toronto, 
where he worked for IP Sharp Associates, a company that had developed 
System/360 programs to support time-sharing, the simultaneous 
use of the computer by many people. </p>

<p>Although he retired in 1987, 
Iverson remained an active researcher and worked 
on the development of programming languages which extended the ideas underpinning APL. 
The most successful of these, the J notation, 
has a large and growing user base in the scientific computing community. 
Iverson actively promoted the diffusion of J until the end of his life. </p>

<p>Iverson&rsquo;s contribution to computer science was widely recognised. 
He received the Harry Goode Award in 1975, the Turing Award in 1979, 
the IEEE Computer Pioneer Award in 1991 and 
the National Medal of Technology in 1991. </p>

<p>Iverson was married to Jean, who survives him, 
along with their four children. </p>

<p>Kenneth Iverson, inventor of the APL programming language, 
was born on December 17, 1920. He died on October 19, 2004, aged 83.</p> 

<p><font size=-1>November 05, 2004</font></p>

<p><a href="http://www.timesonline.co.uk/article/0,,60-1344727,00.html">http://www.timesonline.co.uk/article/0,,60-1344727,00.html</a></p>
<br><hr><br>

 


<a name="lemonde"></a>
<table><tr>
<td valign=top><br><img src="logo_lemonde.gif"></td>
<td>&nbsp;&nbsp;</td>
<td><font size=+3>Kenneth Iverson, le p&egrave;re 
de l&rsquo;un des premiers langages informatiques</font><br>
<font size=-1>LE MONDE | 06.11.04  &#149;  MIS A JOUR LE 08.11.04 | 08h15</font>
</td></tr></table>

<p>Math&eacute;maticien canadien, Kenneth Iverson s&rsquo;est &eacute;teint 
le 19 octobre &agrave; l&rsquo;&acirc;ge 
de 83 ans, victime d&rsquo;une attaque c&eacute;r&eacute;brale.</p>

<p>N&eacute; le 17 d&eacute;cembre 1920 &agrave; Camrose, dans l&rsquo;Etat d&rsquo;Alberta, 
il avait d&ucirc; quitter l&rsquo;&eacute;cole tr&egrave;s t&ocirc;t pour travailler &agrave; 
la ferme de son p&egrave;re. 
En 1945, apr&egrave;s sa d&eacute;mobilisation de la Royal Canadian Air Force, 
on l&rsquo;enjoint de reprendre des &eacute;tudes. Bachelier en math&eacute;matiques &agrave; la 
Queen&rsquo;s University de l&rsquo;Ontario (Canada) en 1951, 
il passe une ma&icirc;trise de math&eacute;matiques la m&ecirc;me ann&eacute;e &agrave; 
l&rsquo;universit&eacute; Harvard, 
aux Etats-Unis, puis, en 1954, toujours &agrave; Harvard, 
sous la direction du professeur Howard Aiken, une th&egrave;se (PhD) 
de math&eacute;matiques appliqu&eacute;es sur la r&eacute;solution par ordinateur des &eacute;quations 
diff&eacute;rentielles lin&eacute;aires (application &agrave; un mod&egrave;le &eacute;conomique dynamique).</p>

<p>En 1955, il devient le ma&icirc;tre assistant &agrave; Harvard d&rsquo;Howard Aiken - 
sacr&eacute; inventeur de l&rsquo;ordinateur pour avoir cr&eacute;&eacute; le Mark-1 en 1944 - 
avant d&rsquo;entrer, en 1960, chez IBM. Il s&rsquo;int&eacute;resse alors aux notations 
math&eacute;matiques aptes &agrave; &ecirc;tre programm&eacute;es directement et il d&eacute;veloppe 
&ldquo;la notation d&rsquo;Iverson&rdquo; publi&eacute;e en 1962 sous le titre A Programming Language. 
Chez IBM, il se lie avec Adin Falkoff, et leur collaboration, constante jusqu&rsquo;en 1980, 
fait na&icirc;tre le langage APL.</p>

<p>Commercialis&eacute; par IBM d&egrave;s 1969, l&rsquo;APL conna&icirc;tra son plus grand succ&egrave;s 
entre 1976 et 1984, comme outil de traitement de donn&eacute;es auxquelles on 
acc&eacute;dait en temps partag&eacute; par t&eacute;l&eacute;phone. En 1970, Ken Iverson a le privil&egrave;ge 
d&rsquo;&ecirc;tre nomm&eacute; dans le groupe tr&egrave;s restreint des IBM fellows (partenaires).</p>

<p>L&rsquo;APL souffrira d&rsquo;une certaine r&eacute;ticence des directions 
informatiques &agrave; l&rsquo;offrir largement, car il donnait l&rsquo;usage de gros 
ordinateurs &agrave; des n&eacute;ophytes consommant sans raison toute la puissance 
disponible avec des programmes m&eacute;diocres. L&rsquo;APL sur micro-ordinateur 
a r&eacute;gl&eacute; cette question.</p>

<p>L&rsquo;extension du langage aux tableaux g&eacute;n&eacute;ralis&eacute;s 
dont les &eacute;l&eacute;ments sont eux-m&ecirc;mes 
des tableaux entra&icirc;na une scission au sein de 
l&rsquo;&eacute;quipe IBM entre les d&eacute;veloppeurs, 
press&eacute;s d&rsquo;aller vite, et Ken Iverson 
qui ne trouve la solution d&eacute;finitive qu&rsquo;entre 
1973 et 1978. En 1979, Ken Iverson re&ccedil;oit la plus haute distinction 
dans le monde informatique : l&rsquo;ACM Turing Award.</p>

<p>Ken Iverson quitte IBM pour rejoindre IP Sharp Associates au Canada, 
de 1980 &agrave; 1987, o&ugrave; il travaille &agrave; l&rsquo;&eacute;volution 
et &agrave; l&rsquo;extension d&rsquo;APL. 
Ses publications - Rationalized APL (1983) et A Dictionary of the APL language (1987) - 
remettent en cause de nombreux choix pris par d&eacute;faut dans l&rsquo;APL de 1969. 
Ken Iverson d&eacute;cide alors de continuer l&rsquo;APL sous un nouveau nom afin d&rsquo;&ecirc;tre 
libre de reprendre &agrave; z&eacute;ro certaines conventions et certaines options. 
Son &eacute;quipe trouve un nom provisoire : le langage J. </p>

<p>Il profite de ce changement pour abandonner les symboles 
particuliers &agrave; l&rsquo;APL et en choisir d&rsquo;autres, disponibles sur tous les claviers. 
En 1990, gr&acirc;ce au concours du jeune, talentueux et d&eacute;vou&eacute; Roger Hui, 
le premier interpr&eacute;teur J est r&eacute;alis&eacute;. Pour Ken Iverson, ce sera l&rsquo;aboutissement 
d&rsquo;APL et de son r&ecirc;ve.</p>

<p>Sylvain Baron</p>

<p><font size=-1>&#149; ARTICLE PARU DANS L&rsquo;EDITION DU 07.11.04</font></p>

<p><a href="http://www.lemonde.fr/web/recherche_articleweb/1,13-0,36-386082,0.html">
http://www.lemonde.fr/web/recherche_articleweb/1,13-0,36-386082,0.html</a></p>

<br><hr><br>




<a name="acm"></a>
<table>
<tr><td valign=middle><img src="acmlogo.gif" align=middle></td>
<td>&nbsp;</td>
<td><font size=+3>ACM Turing Winner Iverson Leaves Programming Legacy</font><br>
<font size=+1>Computer Pioneer Developed APL Language</font>
</td></tr></table>

<p><b>New York</b>, November 9, 2004  &mdash;  Computer pioneer Kenneth E. Iverson, 
who won ACM&rsquo;s prestigious Turing Award in 1979 for his seminal 
contributions to computer programming languages, died October 19th, 
in Toronto, Canada. While at IBM, Iverson invented APL (which stands 
for &ldquo;a programming language&rdquo;). Designed originally as a notation for 
the concise expression of mathematical algorithms, APL was developed 
by Iverson into an interactive programming language that was widely 
used in academic and commercial applications.</p>
 
<p>As an assistant professor at Harvard, Iverson developed a 
mathematical notation for manipulating arrays in order to simplify 
the teaching of algebra to his students. The programming language 
went unnamed and unimplemented for many years, 
known only as &ldquo;Iverson&rsquo;s Language&rdquo;. In 1960, Iverson joined IBM, 
and in 1962, with Adin D. Falkoff, he created APL based on the 
notation he had developed, which was published in a book entitled 
&ldquo;A Programming Language.&rdquo; 
This language challenges conventional algebraic syntax but is compact, 
simple and easy to learn. 
APL is an interactive array-oriented language with many innovative features. 
It is written using a non-standard character set and is dynamically 
typed with dynamic scope. A hardware version of APL with a keyboard 
that has all the necessary characters was built and marketed as well.</p>

<p>Recently, Iverson worked with Jsoftware, Inc., on the Jay Language, 
which can be accessed naturally from as ASCII keyboard and display. 
He saw &ldquo;J&rdquo; as a way to introduce both mathematics and programming. 
He published several small books which use &ldquo;J&rdquo; in this way.</p>
 
<p>The citation for Iverson&rsquo;s 1979 Turing Award, 
known as the Nobel Prize of computing, 
cited &ldquo;his pioneering effort in programming languages 
and mathematical notation resulting in what the computing field 
now knows as APL, for his contributions to the implementation 
of interactive systems, to educational uses of APL, 
and to programming language theory and practice&rdquo;.
 
<p>Iverson grew up on a farm in Alberta, Canada and joined the Royal 
Canadian Air Force in World War II. He attended Queen&rsquo;s University 
in Ontario and earned his MA and PhD in applied mathematics from Harvard, 
where he helped establish the first graduate course in computer science. 
In 1980, he joined I.P. Sharp Associates, 
a timesharing computer system provider.</p>
 
<p>In 1991, Iverson was awarded the U.S. National Medal of Technology. 
He won the Harry M. Goode Memorial Award in 1975 in recognition of 
his conception and development of APL. He was named a Computer Pioneer 
Charter Recipient by IEEE CS in 1981 for his efforts in the creation 
and continued viability of the computer industry. 
Iverson was named an IBM Fellow in 1970.</p>

<p><a href="http://campus.acm.org/public/pressroom/press_releases/11_2004/iverson_11_10_2004.cfm">
http://campus.acm.org/public/pressroom/press_releases/11_2004/iverson_11_10_2004.cfm</a></p>

<br><hr><br>





<a name="itbiz"></a>
<table>
<tr><td valign=middle><img src="itbizlogo.gif" align=middle></td>
<td>&nbsp;</td>
<td><font size=+3>IT industry mourns Canadian software pioneer</font><br>
11/16/2004 5:00:00 PM &mdash; Ken Iverson, who recently passed away at age 83, 
was responsible for APL. 
Fellow creator Mers Kutt and other colleagues remember the contribution that 
led to personal computing 

</td></tr></table>

<p>by Shane Schick </p> 

<p>A Canadian IT pioneer whose 1960s programming language helped inspire one of the world&rsquo;s 
first personal computers will be honoured this week 
by those who continue to devote their careers to his work.</p>

<p>The Toronto APL Special Interest Group will be hosting a memorial service at the OISE Auditorium  
on Thursday at 7:00 p.m. for Ken Iverson, a mathematician and former IBM employee who authored both 
A Programming Language (APL) as well as the more recent J language. 
Iverson passed away on Oct. 19 following a stroke while he was working on his computer. He was 83.</p> 

<p>APL is best known for its use in time-sharing applications 
whereby several users could run several tasks concurrently on one processor, 
or in parallel on many processors, 
usually providing each user with his own terminal for input and output.</p>

<p>&ldquo;People would dial into a host, and their terminal 
at work would time-share with other users,&rdquo; said Sanford Hersh, 
a Toronto-based former employee at an early time-sharing service provider called IP Sharp Assoc. 
&ldquo;The primary use of APL initially was to put, if you will, the action where the transaction is. 
They would put terminals around major companies&rsquo; office sites, Xerox being a prime example.&rdquo;</p>

<p>Iverson grew up on a farm in Alberta 
and entered the Royal Canadian Air Force before going to university. 
He later became assistant professor of Applied Mathematics at Harvard in 1955, 
where he developed a notation for operations on numeric arrays. 
IBM created an interpreter to execute expressions in Iverson&rsquo;s notation. 
He joined IBM and in 1962 published a description of his notation. </p>

<p>&ldquo;He never dreamed of it becoming a computer language until he was hired by IBM,&rdquo; said Hersh.</p>

<p>Iverson&rsquo;s work caught the attention of Mers Kutt, 
who as a professor at Queen&rsquo;s University invited him to speak about APL. 
At the time, Kutt was developing KeyEdit, 
a data processing front-end box that allowed users to edit information. 
He and his team soon started trying out applications written in APL on an IBM S/360 computer. </p>

<p>&ldquo;The response time wasn&rsquo;t that great,&rdquo; he said, 
since it was being shared among a series of key stations 
at various departments around Queen&rsquo;s. 
It was enough to convince Kutt, however, 
that the world needed a box with its own computer chip.</p> 

<p>&ldquo;I saw how important it was to have something in your office, 
and it had to be a computer itself,&rdquo; he said. The MCM-70, 
created in 1973, was based on an Intel microprocessor with APL programmed into the ROM. 
Kutt&rsquo;s work has recently been discovered by the IT community and 
is now regarded as one of the world&rsquo;s first personal computers.</p>

<p>Kutt said the MCM-70, in turn, impressed the founders of VisiCalc, 
in that applications could run on a machine that cost less than $4,000. 
This led VisiCalc to create the spreadsheet program that first ran on Apple Computers, 
according to Kutt. &ldquo;The PC revolution took off in volume.&rdquo;</p>

<p>APL is still alive and well. Last week, a conference 
on the language was hosted by APLBorealis, a Mansfield, 
Ont.-based company that does APL-related consulting and training for legacy systems. </p>

<p>Richard Proctor, one of APLBorealis&rsquo; principals, 
said APL is still used by actuaries and insurance firms for certain calculations. </p>

<p>&ldquo;It&rsquo;s a niche in the industry, I guess you could say,&rdquo; he said. 
&ldquo;You can create everything, including Web services, with APL. 
There&rsquo;s not a lot of companies that have made that leap yet, but there are some that are (doing so).&rdquo;</p>

<p>Hersh said he once used APL to write software that 
ran a manufacturing and distribution centre. </p>

<p>&ldquo;We got extremely high bills for our usage,&rdquo; he said. 
&ldquo;We would typically run a bill of $2,000 or $3,000 a month.&rdquo;</p>

<p>Proctor, who met Iverson as a colleague at IP Sharp, 
said the APL Special Interest Group is considering the creation of a scholarship 
or publishing a book in his honour. </p>

<p>&ldquo;He was a fairly imposing fellow intellectually,&rdquo; he said. 
&ldquo;I always met him with a great deal of respect and reverence because 
he was this god who created the language I ended up devoting myself to.&rdquo;</p>

<p>There has been at least one firm, Adaytum, which has used Iverson&rsquo;s 
J language in the kernel of its software for a data warehousing project, 
Proctor said. J language can be used in highly mathemetically-intensive situations. 
Adaytum as acquired by Cognos last year. 
J Software continues to develop the J language.</p>

<p>-- With files from Dave Webb</p>

<p><a href="http://www.itbusiness.ca/index.asp?theaction=61&sid=57357">http://www.itbusiness.ca/index.asp?theaction=61&sid=57357</a></p>

<br><hr><br>




<a name="torapl"></a>
<table>
<tr><td valign=middle><img src="torapllogo.gif" align=middle></td>
<td>&nbsp;</td>
<td><font size=+3>Dr. Kenneth E. Iverson - Memorial Service</font><br>

</td></tr></table>

<p>There will be a public memorial service to celebrate the life and works 
of our dear friend and mentor Ken Iverson</p>

<blockquote>
Thursday November 18th 7-9 pm<br>
OISE Auditorium <br>
252 Bloor Street W. (exit St. George Station) <br>
Toronto, Canada
</blockquote>

<p>Please RSVP to Dan King {danking(at)sympatico.ca} by return email 
if you wish to be on the speakers&rsquo; list (or call Dan at 416-595-1782)
</p>

<p><a href="http://www.torontoapl.ca">http://www.torontoapl.ca</a></p>

<br><hr><br>




<a name="washpost"></a>
<table>
<tr><td><img src="wpLogo_250x42.gif" width=250 height=42></td>
<td>&nbsp; &nbsp;</td>
<td><font size=+3>Kenneth E. Iverson Computer Scientist</font><br>

</td></tr></table>

<p>Kenneth E. Iverson, 83, an award-winning computer scientist who invented 
the APL programming language, died Oct. 19 in Toronto. 
No cause of death was reported. </p>

<p>Mr. Iverson, a professor at Harvard University, joined the Thomas J. Watson 
Research Center in New York in 1960, where he created and published a 1960 
text titled, &ldquo;A Programming Language&rdquo;.
He never bothered to name it, so it became known as APL. </p>

<p>This language uses nonstandard characters, but it is considered compact, 
simple and easy to learn, and it allowed scientists to use a keyboard attached 
directly to a mainframe computer, rather than forcing them to create 
a series of punch cards. 
In the 1990s, he developed the J programming language. </p>

<p>He was awarded the Association for Computing Machinery&rsquo;s prestigious 
Turing Award in 1979 and became an IBM fellow, one of only 180 since 1963, 
in 1970.</p>

<p><font size=-1>November 20, 2004</font></p>


<p><a href="http://www.washingtonpost.com/wp-dyn/articles/A64136-2004Nov19.html">http://www.washingtonpost.com/wp-dyn/articles/A64136-2004Nov19.html</p>
<br><hr><br>




<a name="museum"></a>
<table>
  <TR>
    <TD>
      <table>
        <TR>
          <TD><A href="http://www.computerhistory.org">
          <IMG src="museumlogo.jpg" border=0></A></TD>
          <TD>&nbsp;</TD>
        </TR></TABLE></TD></TR>

  <TR>
    <TD>
      <TABLE align=center cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR>
          <TD bgcolor=#d9d9d9>
            <br><font color=#880000 size=+3>&nbsp; What&rsquo;s Happening</font><br><br> 
                <FONT color=#000066 size=+3>&nbsp; &nbsp; &nbsp; &nbsp; 
                 Calendar of Events
                </FONT></TD></TR>
        <TR>
          <TD>
            <TABLE cellSpacing=0 cellPadding=0 border=0>
              <TBODY>
              <TR>
                <TD bgcolor=#d9d9d9 width=50></TD>
                <TD vAlign=top bgcolor=#d9d9d9 height=246>
                  <SPAN class=copy>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD vAlign=top align=middle><FONT 
                        face="Arial, Helvetica, sans-serif" size=+1><br><B>A 
                        Celebration of Kenneth Iverson</B></FONT> </TD></TR>
                    <TR>
                      <TD vAlign=top align=middle><FONT 
                        face="Arial, Helvetica, sans-serif" size=-1><B>1920-2004</B></FONT> 
                      </TD></TR>
                    <TR>
                      <TD>&nbsp;</TD></TR>
                    <TR>
                      <TD align=middle ><IMG 
                        src="phpDgkSX5.jpg"></TD></TR>
                    <TR>
                      <TD><BR></TD></TR>
                    <TR>
                      <TD><span class=copy>
<P align=center><b><font color=#990000><u>Paul Berry</u></font>, 
 <font color=#990000><u>Larry Breed</u></font>, 
 <font color=#990000><u>Fred Brooks</u></font>, 
 <font color=#990000><u>Joey Tuttle</u></font>, and 
 <font color=#990000><u>Arthur Whitney </u></font></b></p>
                        <P align=center><B>DATE &amp; TIME</B><BR>Tuesday, 
                        November 30, 2004 <BR><BR>6:00 PM Reception <BR>7:00 PM 
                        Celebration and Tribute 
                        <BR><BR><B>LOCATION</B><BR>Computer History Museum 
                        <BR>1401 N. Shoreline Boulevard <BR>Mountain View, CA 
                        <P 
                        align=center><STRONG>REGISTRATION</STRONG><BR>Suggested 
                        Donation: $25 <BR>Donate 
                        <font color=#990000><u>now</u></font>
                        or donation is also accepted at the door. <BR><BR>
                        <font color=#990000><u>Register Now</u></font> <BR><BR>Call 650-810-1019 for 
                        information.<BR><BR></P>
                        <HR>

                        <P align=left><B>ABSTRACT OF TALK</B><BR>The creator of 
                        APL (A Programming Language) and J (J Language) will be 
                        remembered and celebrated in a series of talks presented 
                        by those who knew him well. <BR><BR><B>BACKGROUND</B> 
                        <BR>Dr. Kenneth Iverson, who died October 19, 2004 at 
                        the age of 83, was the father of the elegant array 
                        programming language APL (A Programming Language) and, 
                        more recently, of J. He was a gifted mathematician, 
                        educator, and writer. Born December 17, 1920, in 
                        Camrose, Alberta, Canada, he received a BA in 
                        mathematics and physics from Queen&rsquo;s University in 
                        Ontario, and an MA in mathematics and PhD in applied 
                        mathematics from Harvard University. As an assistant 
                        professor at Harvard, Iverson developed a mathematical 
                        notation for manipulating arrays that he taught to his 
                        students. In 1962 at IBM, he worked with Adin Falkoff to 
                        create the language APL based on that notation. He was 
                        named an IBM Fellow in 1970. He received the AFIPS Harry 
                        Goode Award in 1975, ACM Turing Award in 1979, IEEE 
                        Computer Pioneer Award in 1982, and the National Medal 
                        of Technology in 1991. </P>
                        <P align=left><B>MEMBERSHIP</B><BR>Current members of 
                        the Computer History Museum have purchased an 
                        <font color=#990000><u>individual membership</u></font> at $60.00 or more within the last year. 
                        To become a member, please go to our 
                        <font color=#990000><u>Contribution Form</u></font> or call +1 650 810 
                        1026.</P></FONT></TD></TR>
                    <TR>
                      <TD>&nbsp;</TD></TR></TBODY></TABLE></SPAN></TD>
                <TD bgcolor=#d9d9d9 width=50>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
        <TR>
          <TD bgcolor=#d9d9d9 height=14></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD>
      <TABLE align=center>
        <TR>
          <TD height=67>
            <DIV align=center><SPAN class=nav><BR><font color=#990000>
            <u>About the Museum</u> |  
            <u>Exhibits</u> | 
            <u>Collections</u> | 
            <u>What&rsquo;s Happening</u> | 
            <u>Giving</u> |
            <u>About This Site</u> <BR> 
            <u>Privacy</u> |
            <u>Copyright</u> |
            <u>Feedback</u> |
            <u>Credits</u> |
            <u>Advanced Search</u> | 
            <u>Site Map</u></font>
            <BR><BR></SPAN><SPAN class=copyright>&copy; 2004 Computer History 
            Museum. All rights reserved.<BR>1401 N. Shoreline Blvd., Mountain 
            View CA 94043&nbsp;&nbsp;&nbsp; Ph 650-810-1010
 </SPAN></DIV></TD></TR></TABLE></TD></TR>
</TABLE>

<br>

<TABLE align=center cellSpacing=0 cellPadding=0 border=0 bgcolor=#d9d9d9>
<tr>
<TD width=100></TD>
<td><SPAN class=copy>
<p>&nbsp;</p>

<p><b>Paul Berry</b><br>
A psychologist who&rsquo;d been studying school programs in math and science, 
Berry joined Iverson&rsquo;s team at the IBM Research Center in Yorktown Heights, NY, 
in 1966 to work on the uses of APL in education. 
Jointly with the IBM Research Center in Bari, Italy, 
he wrote several papers on the uses of the APL language 
as a means of expression and explanation. 
At IBM and later at I.P. Sharp Associates, he wrote APL reference manuals that 
combined accuracy and readability.</p>

<p><b>Larry Breed</b><br>
A Stanford student who attended a lecture by Ken Iverson in 1966, 
Breed was hired by Iverson after he pointed out inaccuracies 
in the formal description of IBM&rsquo;s System 360. 
At the IBM Research Center in Yorktown Heights, NY, 
he led the design and implementation of what came to be called APL. 
This became very popular within IBM, not only for the language, 
but for the quick reaction times and reliability of the system. 
In 1973, he and two associates received for this work the 
Grace Murray Hopper award for outstanding young computer professionals. </p>
 
<p><b>Fred Brooks</b><br>
While a graduate student at Harvard, 
Dr. Brooks joined with Ken Iverson in writing Automatic Data Processing. 
In the preface to Iverson&rsquo;s 1962 book, 
A Programming Language, he wrote: &ldquo;The unusually large contribution 
by Dr. Brooks arose as follows. Several chapters of the present work 
were originally prepared for inclusion in a joint work which eventually 
passed the bounds of a single book and evolved into our joint 
Automatic Data Processing and the present volume. 
Before the split, several drafts of these chapters 
had received careful review at the hands of Dr. Brooks, 
reviews which contributed many valuable ideas on organization, 
presentation, and direction of investigation, as well as numerous specific suggestions.&rdquo; 
</p>

<p><b>Joey Tuttle</b><br>
At IBM he played a central role in the development of the IBM 5100 computer. 
This is the predecessor of the IBM 5150 PC. 
It was a self-contained, portable desktop computer 
that supported programming in BASIC and APL. 
Development of the 5100 began in 1973 at the IBM facilities in 
Rochester, Minn., and the first models were shipped to customers in September 1975. 
</p>

<p><b>Arthur Whitney</b><br>
At I.P. Sharp Associates in Toronto, Arthur Whitney and Kenneth Iverson 
put the Airline Guide online. Arthur did all of the coding. 
In the twenty years since then, this has run for 24 hours a day and 365 days a year. 
Whitney also wrote an APL system for Hewlett-Packard Australia. 
At Morgan Stanley, he wrote A+. 
This is a descendant of APL and a predecessor of K (K Language). 
Arthur Whitney developed A+ in the late &rsquo;80s in response to employer 
Morgan Stanley&rsquo;s need to move their APL applications from mainframes 
to Sun workstations. He later left Morgan Stanley and wrote K. 
</p>

<p>&nbsp;</p>
</span></td>
<TD width=100></TD>
</tr>
</table>
<p align=center><img src="CHM_20041130_IMG_007a.jpg" width=876 height=584">
<span class=copy><br>Fred Brooks, Larry Breed, Joey Tuttle, Arthur Whitney, Eugene McDonnell, Paul Berry</span>
</p>

<p><a href="http://www.computerhistory.org/events/index.php?id=1099685637">
http://www.computerhistory.org/events/index.php?id=1099685637</a></p>

<br><hr><br>





<a name="ieeeannals"></a>
<table>
<tr>
<td width=250><img src="IEEEAnnals.gif"></td>
<td>&nbsp;&nbsp;</td>
<td align=left><font size=+3>Remembering Iverson</font></td></tr>
<tr><td colspan=3>

<p><br>by David Alan Grier, Editor-in-Chief</p>

<p>As this issue goes to press, we again have to mark the passing of one 
of the founders of the field, Kenneth Iverson.[1] 
Iverson was best known for the programming language, APL. 
He invented this language when he was a graduate student at Harvard in 1962. 
To those who were thinking in terms of the conventional languages of the day&mdash;
Fortran IV, Cobol, Algol 60&mdash;APL seemed like a radical departure. 
It used a host of symbols to reduce large programs for data manipulation 
into simple expressions. 
As with many innovations in computer science, 
APL had its devoted partisans and its shameless critics. 
Partisans praised the language because it produced,compact and succinct programs. 
They often pointed to a classic program of 17 symbols that produced a list 
of prime numbers less than some input value:</p>

&nbsp;&nbsp;&nbsp;<img src="primes.jpg">

<p>Yet these same short little codes drew fire from critics who found them 
incomprehensible and impossible to decode. 
&ldquo;There are three things a man must do before his life is done,&rdquo; 
wrote the author Stan Kelly-Bootle. 
&ldquo;Write two lines in APL and make the buggers run.&rdquo; [2] 
This controversy lasted well into the 1980s, 
even though by then APL was recognized as merely an example 
of a functional language, as compared to the state-oriented languages 
of Fortran and the rest. I can recall being at an applied mathematics 
conference in the summer of 1989 and watching two scientists square 
off to debate the merits of APL, one claiming that the language was 
the future of scientific computing, the other dismissing APL 
as an incomprehensible mess.</p>

<p>In hearing the news of Iverson&rsquo;s passing, 
I was surprised to be reminded that the inventor of APL was a Canadian. 
I suppose that this fact exposed a bit of American-centrism in my thinking 
that overlooks the important contributions to computer science that 
were done not in Silicon Valley or New York or in Boston, but in Toronto, 
Calgary, and Waterloo. But such is the lesson of history. 
There is much that must be done to tell the story of the past 
but in that work there are at least a few surprises.</p>

<p>References and notes
<p>1. Kenneth Iverson, <a href="#globeandmail1">&ldquo;Mathematician: 1920-2004&rdquo;, 
Toronto Globe and Mail</a>, 25 Oct. 2004, p. 58.<br>
2. S. Kelly-Bootle, The Devil&rsquo;s DP Dictionary, McGraw Hill, 1981, p 23.</p>

<p><font size=-1>vol. 26, no. 4, October-December, 2004, p.3</font></p>

</td></tr>
</table>

<br><hr><br>





<a name="discover"></a>

<p><img src="discover.gif"></p>

<p>Died:  Kenneth Iverson, 83, on October 19.  He received the Turing
Award, the computing world&rsquo;s highest honor, for creating the
programming language APL.</p>

<p><font size=-1>February 2005</font></p>

<br><hr><br>









<a name="albertaviews"></a>

<table>
<tr><td valign=top><img src="albertaviews.jpg"></td>
<td>&nbsp;</td>
<td>IN MEMORIAM<br><font size=+2>Kenneth Iverson: 1920-2004</font></td>
</tr>
</table>

<p>by Keith W. Smillie</p>

<p><font size=-1>Dr. Kenneth Iverson, who gained international recognition
for the development of the computer programming languages
APL and J, died of a stroke in Toronto on October 19, 2004, 
at the age of 83. 
His death appears to have gone almost unnoticed in his native Alberta,
yet tributes to hsi life and work appeared in leading newspapers
in Toronto, London and Paris and in several professional and 
technical publications.  Public memorials were held in Toronto
and in Mountain View, California.  Dr. Keith Smillie,
professor emeritus of computing science and the University of Alberta,
writes this tribute to an important colleague and Albertan.</font></p>

<p>Kenneth Eugene Iverson was born on December 17, 1920,
on a farm near Camrose.  He was of Norwegian descent;
his parents came to Alberta from North Dakota when they
were children.  His early education in one-room schools
ended in Grade 9 when he began full-time work on the
family farm.  During the long, cold winters he studied
calculus, among other subjects, from a second-hand
textbook he had purchased on a visit to Edmonton.
In the Second World War he served in the Royal Canadian Air Force
as a flight engineer, specializing in reconaissance.
He found time to take almost enough correspondence
courses to complete the requirements for high-school
graduation.</p>

<p>Ken entered Queen&rsquo;s University after the war
and graduated in 1950 with a B.A. in mathematics and physics.
He then went to Harvard, where he received an M.A. in
mathematics in 1951 and a Ph.D. in applied mathematics
from the department of engineering and applied physics
in 1954.  Hen then joined the Harvard faculty,
first as an instructor and then as an assistant
professor of applied mathematics, where he remained
until 1960.</p>

<p>While on the faculty at Harvard, he lectured in the
newly established program in automatic data processing.
Dissatisfied with the conventional mathematical notation
used in the courses, he began work on extensions developed
while working on his Ph.D. thesis.  This was the beginning
of &ldquo;Iverson notation&rdquo;, which was to form
the basis of the APL and J languages.</p>

<p>In 1960 Ken join IBM&rsquo;s research division, where
he continued work on his notation, which he described
in the book <i>A Programming Language</i>, published
in 1962.  In 1963 he co-authored <i>Automatic Data Processing</i>
with Frederick Brooks, one of his teaching fellows at
Harvard who had also joined IBM.  In both books,
the Iverson notation was used to describe not only
various computational procedures, but also the formal
design of the IBM 7090 computer and the IBM System/360
family of computers.</p>

<p>Soon, Ken, working with a small group of engineers and scientists,
produced a version of this notation which could be used
interactively and simultaneously by a number of persons
from typewriter-like terminals connected to a remote computer.
Thus was born the APL language, the named derived from the
title of this first book.</p>

<p>APL may be described as an array language in which the basic
elements of computation are not individual numbers but lists
of numbers arranged in rows, or tables in two dimensions,
or solids in three dimensions, and so on.
Arithmetical and logical operations, such as finding
the largest number in a list or the row or column sums of
a table of numbers, are defined over these arrays rather
than just for individual pairs of numbers.
The details of carrying out these operations on the
arrays are left to the APL interpreter program
in the computer.</p>

<p>A simple agricultural experiment to study the
influence of fertilizer levels and tillage methods
on the yield of several varieties of a crop may serve
as an example of the influence of an array language
on the processing of data.
Viewed in the field, the plants are arranged in
rows which are grouped in plots which in turn may
be grouped in larger plots corresponding to variety,
treatment methods and the repetitions required to
support valid inferences.  In the computer, however,
the experimental data may be organized in a
four-dimensional array with dimensions corresponding
to varieties, fertilizer levels, tillage methods and
repetitions.  The required statistical operations,
many of which are finding the sums of the data over
one or several dimensions, may be programmed much
more simply using an array language than a 
conventional language.</p>

<p>Fred Brooks has given a nice analogy of the difference
between a conventional computer language such as BASIC and
an array language.  Suppose we have a box of apples from
which we wish to select all of the good apples.  Not wishing
to do the task ourselves, we write a list of instructions
to be carried out by a helper.
The instructions corresponding to a conventional language
would be something like the following:</p>

<p>Reserve a place for the good apples.  Then select an apple from
the box, and if it is good put it in the reserved place.
Select a second apple, and if is good add it to the reserved place.
Continue in this manner examining each apple in turn until
all of the good apples have been selected.</p>

<p>On the other hand, the instructions corresponding to
an array language would be simply<br>
&nbsp; &nbsp; &nbsp; Select all the good apples from the box.<br>
Of course, the apples would still have to be examined 
individually but the apple-by-apple details would be
left to the helper.</p>

<p>Ken was made an IBM Fellow in 1971 in recognition of 
his work with APL.  In 1980 he returned to Canada to join
I.P. Sharp and Associates, a Toronto firm which supported
System/360 time-sharing applications on mainframe computers.
There he continued to develop and promote APL.  In 1987,
in his own delightful words, he &ldquo;retired from
paid employment&rdquo;, and began work on a dialect
of APL having a number of attributes: it would be
available either inexpensively or at low cost on a
variety of different computers; it would use the standard
character set rather than the esoteric-looking characters of APL;
it could be printed on almost any printer; and it would
take advantage of new computing environments such as
graphical user interfaces.  This dialect was designated
simply as J.</p>

<p>Ken had a profound interest in words and their etymology,
and treasured his copies of the American Heritage Dictionary
with its section on the Indo-European roots of the English
language.  Throughout his career he relentlessly promoted,
in his characteristic sparse style, his passionately held view
that computing languages should be learned first in the way 
natural languages are learned, that is, by using them in the
real world, and not by studying their grammar.  He was working
on another J tutorial when he suffered a fatal stroke on the
Saturday afternoon before his death.</p>

<p>Among his honours were the Harry Goode Award,
the Association of Computing Machinery Turning Award,
the <font size=-1>IEEE</font> Computer Pioneer Award,
the National Medal of Technology and a Doctor of Science
degree from York University.</p>

<p>Kenneth Iverson is survived by his wife Jean, daughter Janet Cramer,
sons Eric, Paul and Keith, foster daughters Robin Dick and 
Sherry Matusky, and five grandchildren.</p>

<p><font size=-1>June 2005</font></p>
<br><hr><br>





<a name="harvard"></a>

<img src="harvard.gif">
<p><b>KENNETH EUGENE IVERSON</b>, Ph.D. &rsquo;54, died October 19, 2004, 
in Toronto. While at Harvard in the early 1950s, he assisted economist 
Wassily Leontief by devising the data structures and algorithms that 
enabled his Nobel Prize-winning &ldquo;input-output&rdquo; 
model to be calculated 
on the computers of the day. He also taught the world&rsquo;s first 
university course in using computers for business applications; 
frustrated that no existing mathematical notation was adequate 
to the task, he devised his own, A Programming Language (APL). 
Later, at IBM, he helped develop APL into an interactive 
programming language used widely in academic and 
commercial applications, especially finance. He received the A.M. 
Turing Award of the Association for Computing Machinery, 
the most prestigious award in computer science, in 1979. 
He leaves his wife, Jean (Nicholson), a daughter, Janet Cramer, 
three sons, Eric, Paul, and Keith, 
and two foster daughters, Robin Dick and Sherry Matusky.</p>

<p><font size=-1>July-August, 2005</font><br>
<a href="http://www.harvardmagazine.com/classnotes/0705-obituaries.html">
http://www.harvardmagazine.com/classnotes/0705-obituaries.html</a></p>



<br><br>
</body>
</html>
